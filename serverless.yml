service: users-authoriser
app: bizzflow
frameworkVersion: "2"

custom:
  environment: ${env:NODE_ENV, 'dev'}
  application: BizzFlow
  stage: ${self:provider.stage}
  customDomain:
      domainName: auth.bizzflow.link
      basePath: ${opt:stage, self:provider.stage}
      stage: ${self:provider.stage}
      createRoute53Record: true

provider:
  name: aws
  runtime: nodejs14.x
  description: BizzFlow Lambda authorizer

  stage:  ${env:NODE_ENV, 'dev'}
  region: ${env:REGION, 'eu-central-1'}

  lambdaHashingVersion: 20201221
  stackName: ${self:service}-${opt:stage, self:provider.stage}-stack 
  apiName: ${self:service}-${opt:stage, self:provider.stage}-api 

  environment:
    NODE_ENV: ${env:NODE_ENV}
    SYSTEM: ${self:service}-${self:custom.environment}
    USERS_TABLE: users-${self:custom.environment}
    API_GATEWAY: ${self:custom.application}-ApiGW
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

  stackTags:
    service: ${self:service}
    application: ${self:custom.application}
  tags:
    application: ${self:custom.application}
    service: ${self:service}
    
plugins:
  - serverless-plugin-typescript 
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-domain-manager

package:
  exclude:
    - config/.env.stg
    - config/.env.pro
  include:
    - config/.env.dev

functions:
  basicUserAuthorizer:
    handler: src/handler.jwtAuth
  authTestAuth:
    handler: src/handler.authTestHandler
    description: ${self:custom.application}(${self:service}) > handler for Custom Authoriser test
    events:
      - http:
          path: auth-test
          method: get
          cors: true
          authorizer:
            name: 'basicUserAuthorizer'
  authTestNoAuth:
    handler: src/handler.authTestHandler
    description: ${self:custom.application}(${self:service}) > handler for Custom Authoriser test (No Auth)
    events:
      - http:
          path: no-auth-test
          method: get
          cors: true

resources:
  Resources:
    BizzFlowApiGW:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: BizzFlowApiGW

  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: BizzFlowApiGW
      Export:
        Name: BizzFlowApiGateway-restApiId-${opt:stage, self:provider.stage}
